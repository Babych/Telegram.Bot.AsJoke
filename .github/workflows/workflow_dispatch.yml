name: Manage Docker Containers - devbotvm

on:
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run'
        required: true
        default: 'stop-container-dev'

jobs:
  handle-input:
    runs-on: ubuntu-latest
    outputs:
      job: ${{ needs.handle-input.outputs.job }}
    steps:
      - name: Set job output
        id: handle-input
        run: echo "::set-output name=job::${{ github.event.inputs.job }}"

  stop-container-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.inputs.job == 'stop-container-main'
    steps:
      - name: Stop Docker Containers on Remote Server - main
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop the specific Docker image
            docker stop $(docker ps -q --filter ancestor=dbabych/devbotvm:latest) || true

  stop-container-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event.inputs.job == stop-container-dev'
    steps:
      - name: Stop Docker Containers on Remote Server - test
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop the specific Docker image
            docker stop $(docker ps -q --filter ancestor=dbabych/testbotvm:latest) || true

  start-container-main:
   runs-on: ubuntu-latest
   if: github.ref == 'refs/heads/main' && github.event.inputs.job == 'start-container-main'
   steps:
     - name: Start Docker Containers on Remote Server - dev
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.TARGET_HOST }}
         username: ${{ secrets.TARGET_USERNAME }}
         key: ${{ secrets.SSH_PRIVATE_KEY }}
         script: |
           # Start the specific Docker image
           docker run -d --name testbotvm dbabych/devbotvm:latest

  start-container-dev:
   runs-on: ubuntu-latest
   if: github.ref == 'refs/heads/dev' && github.event.inputs.job == 'start-container-dev'
   steps:
     - name: Start Docker Containers on Remote Server - dev
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.TARGET_HOST }}
         username: ${{ secrets.TARGET_USERNAME }}
         key: ${{ secrets.SSH_PRIVATE_KEY }}
         script: |
           # Start the specific Docker image
           docker run -d --name testbotvm dbabych/testbotvm:latest
